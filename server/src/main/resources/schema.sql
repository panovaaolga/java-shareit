DROP TABLE IF EXISTS public.comments CASCADE;
DROP TABLE IF EXISTS public.bookings CASCADE;
DROP TABLE IF EXISTS public.items CASCADE;
DROP TABLE IF EXISTS public.requests CASCADE;
DROP TABLE IF EXISTS public.users CASCADE;

CREATE table IF NOT EXISTS public.users (
user_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	user_name varchar(255) NOT NULL,
	email varchar(255) NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY (user_id),
	CONSTRAINT users_un UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.requests (
	request_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	description varchar(600) NOT NULL,
	created timestamp without time zone NOT NULL,
	author_id bigint NOT NULL,
	CONSTRAINT requests_pk PRIMARY KEY (request_id),
	CONSTRAINT requests_fk FOREIGN KEY (author_id) REFERENCES public.users(user_id)
);

CREATE table IF NOT EXISTS public.items (
	item_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	item_name varchar(255) NOT NULL,
	description varchar(600) NOT NULL,
	is_available boolean NULL,
	owner_id bigint NOT NULL,
	request_id bigint,
	CONSTRAINT items_pk PRIMARY KEY (item_id),
	CONSTRAINT items_fk FOREIGN KEY (owner_id) REFERENCES public.users(user_id),
	CONSTRAINT items_fk_1 FOREIGN KEY (request_id) REFERENCES public.requests(request_id)
);

CREATE TABLE IF NOT EXISTS public.bookings (
	booking_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	start_date timestamp without time zone NOT NULL,
	end_date timestamp without time zone NOT NULL,
	status varchar(8) NOT NULL,
	booker_id bigint NOT NULL,
	item_id bigint NOT NULL,
	CONSTRAINT bookings_pk PRIMARY KEY (booking_id),
	CONSTRAINT bookings_fk FOREIGN KEY (booker_id) REFERENCES public.users(user_id),
	CONSTRAINT bookings_fk_1 FOREIGN KEY (item_id) REFERENCES public.items(item_id)
);

CREATE TABLE IF NOT EXISTS public.comments (
	comment_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	text varchar(600) NOT NULL,
	created timestamp without time zone NOT NULL,
	item_id bigint NOT NULL,
	author_id bigint NOT NULL,
	CONSTRAINT comments_pk PRIMARY KEY (comment_id),
	CONSTRAINT comments_fk FOREIGN KEY (author_id) REFERENCES public.users(user_id),
	CONSTRAINT comments_fk_1 FOREIGN KEY (item_id) REFERENCES public.items(item_id)
);